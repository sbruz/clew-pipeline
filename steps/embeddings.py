import os
from openai import OpenAI
from utils.supabase_client import get_supabase_client


def generate_embedding(book_id: int):
    supabase = get_supabase_client()
    client = OpenAI(api_key=os.getenv("OPENAI_API_KEY"))

    print(f"EMB[{book_id}] üì• –ó–∞–≥—Ä—É–∂–∞–µ–º –∂–∞–Ω—Ä –∏ –∞–≤—Ç–æ—Ä–∞ –∫–Ω–∏–≥–∏...")
    # –ü–æ–ª—É—á–∞–µ–º –∞–≤—Ç–æ—Ä–∞ –∏ –∂–∞–Ω—Ä (–≤–Ω–∏–º–∞–Ω–∏–µ: –ø–æ–ª–µ genre, –Ω–µ genres!)
    response = supabase.table("book_export_view").select(
        "author, genre"
    ).eq("book_id", book_id).eq("language", "ru").single().execute()

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—à–∏–±–∫–∏ –∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö
    if not response.data or not isinstance(response.data, dict):
        print(
            f"EMB[{book_id}] ‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã –∂–∞–Ω—Ä –∏–ª–∏ –∞–≤—Ç–æ—Ä, –ª–∏–±–æ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç.")
        print(f"EMB[{book_id}] ‚õî –û—Ç–≤–µ—Ç: {response.data}")
        if hasattr(response, "error") and response.error:
            print(f"EMB[{book_id}] ‚ùå –û—à–∏–±–∫–∞ Supabase: {response.error}")
        return

    author = response.data.get("author", "")
    genre = response.data.get("genre", "")

    print(f"EMB[{book_id}] ‚úçÔ∏è –ê–≤—Ç–æ—Ä: '{author}' | –ñ–∞–Ω—Ä: '{genre}'")

    combined = f"{author} {genre}".replace(",", " ")
    combined = " ".join(combined.split())

    print(f"EMB[{book_id}] üîÑ –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–ª—è embedding: '{combined}'")

    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º embedding
    try:
        print(f"EMB[{book_id}] üß† –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º embedding —á–µ—Ä–µ–∑ OpenAI...")
        embedding_response = client.embeddings.create(
            input=combined,
            model="text-embedding-3-small"
        )
        embedding = embedding_response.data[0].embedding
        print(f"EMB[{book_id}] ‚úÖ –ü–æ–ª—É—á–µ–Ω embedding –¥–ª–∏–Ω–æ–π {len(embedding)}")
    except Exception as e:
        print(f"EMB[{book_id}] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ embedding: {e}")
        return

    # --- –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É –¥–ª—è real[] ---
    embedding_str = "{" + ",".join(str(x) for x in embedding) + "}"

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º embedding –≤ —Ç–∞–±–ª–∏—Ü—É books
    try:
        print(f"EMB[{book_id}] üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º embedding –≤ —Ç–∞–±–ª–∏—Ü—É books...")
        supabase.table("books").update(
            {"embedding": embedding_str}
        ).eq("id", book_id).execute()
        print(f"EMB[{book_id}] ‚úÖ Embedding —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω—ë–Ω.")
    except Exception as e:
        print(f"EMB[{book_id}] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ embedding: {e}")
        return
